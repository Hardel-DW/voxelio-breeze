import type { ModMetadata } from "@/converter/types";
import { DEFAULT_MOD_METADATA, ModPlatforms } from "@/converter/types";

/**
 * Generates TOML content for Forge/NeoForge mods
 * @param commonData - Common mod metadata
 * @param platforms - Target platforms (affects loader generation)
 * @returns Formatted TOML content for mods.toml
 */
export function generateForgeMods(commonData: ModMetadata, platforms: ModPlatforms[]) {
    const modLoader = platforms.includes(ModPlatforms.FORGE) ? "lowcodefml" : "javafml";
    const loaderVersion = platforms.includes(ModPlatforms.FORGE) ? "40,)" : "1,)";

    // Base configuration
    const baseConfig = [
        `modLoader = '${modLoader}'`,
        `loaderVersion = '[${loaderVersion}'`,
        "license = 'LicenseRef-Datapack'",
        "showAsResourcePack = false",
        "mods = ["
    ];

    // Create mod entry in a single line
    let modEntry = `\t{ modId = '${commonData.id}', version = '${commonData.version}', displayName = '${commonData.name}', description = "${commonData.description.replace(/"/g, '\\"')}"`;

    if (commonData.icon) {
        modEntry += `, logoFile = '${commonData.icon}'`;
    }

    modEntry += `, credits = 'Generated by DatapackConverter'`;

    if (commonData.homepage && commonData.homepage !== DEFAULT_MOD_METADATA.homepage) {
        modEntry += `, updateJSONURL = '${commonData.homepage}/updates.json'`;
        modEntry += `, displayURL = '${commonData.homepage}'`;
    }

    if (commonData.authors.length > 0) {
        modEntry += `, authors = '${commonData.authors.join(", ")}'`;
    }

    modEntry += " }";

    baseConfig.push(modEntry);
    baseConfig.push("]");

    if (commonData.issues && commonData.issues !== DEFAULT_MOD_METADATA.issues) {
        baseConfig.push(`issueTrackerURL = '${commonData.issues}'`);
    }

    return baseConfig.join("\n");
}
